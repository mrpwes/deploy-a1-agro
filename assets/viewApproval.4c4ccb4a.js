import{ar as c,as as n}from"./index.504ec86a.js";import{u as d}from"./globalNotification.5d4f7813.js";const i=d(),f=c("viewApproval",{state:()=>({rows:[],columns:[{name:"id",align:"center",label:"Request ID",field:e=>e.id,format:e=>`${e}`,sortable:!0},{name:"employeeName",align:"center",label:"Employee Name",field:e=>e.employee_id.company_employee_id+" - "+e.employee_id.first_name+" "+e.employee_id.last_name,format:e=>`${e}`,sortable:!0},{name:"type",align:"center",label:"Type",field:e=>e.type==1?"Leave":e.type==2?"Maternity Leave":e.type==3?"Paternity Leave":e.type==4?"BIR 2316":null,sortable:!0},{name:"description",align:"center",label:"Description",field:e=>e.description,format:e=>`${e}`,sortable:!0},{name:"status",align:"center",label:"Status",field:e=>{if(e.is_approved===null)return"Pending";if(e.is_approved===!0)return"Approved - "+e.admin_id.first_name+" "+e.admin_id.last_name;if(e.is_approved===!1)return"Declined - "+e.admin_id.first_name+" "+e.admin_id.last_name},format:e=>`${e}`,sortable:!0},{name:"actions",align:"center",label:"",field:""}]}),getters:{getArchivedApprovalList(e){return e.rows.filter(t=>t.is_archive===!0)},getUnarchivedApprovalList(e){return this.rows.sort((t,a)=>t.id-a.id)}},actions:{async getRequestList(){try{const{data:e,error:t}=await n.from("leave_request").select("*, employee_id(id,first_name, last_name, company_employee_id), admin_id(first_name, last_name, company_employee_id)");if(t)throw t;this.rows=e}catch(e){console.log(e)}},async insertAttendance(e,t){try{const a=new Date(t);a.setHours(8,0,0,0);const r=new Date(t);r.setHours(17,0,0,0);const{data:o,error:s}=await n.from("attendance").insert({employee_id:e,adjustment_salary_id:2,time_in:a,time_out:r,attendance_type_id:2,date:t});if(s)throw s;i.showSuccessNotification("Leave Added")}catch(a){console.log(a),i.showErrorNotification("Failed to add Leave, please try again")}},async checkAttendance(e,t){try{const{data:a,error:r}=await n.from("attendance").select("id").eq("employee_id",e).eq("date",t);if(r)throw r;if(a&&a.length>0){const o=await this.deleteAttendance(a[0].id);if(o)throw o}return a}catch(a){console.log(a),i.showErrorNotification("Failed to check attendance, please try again")}},async deleteAttendance(e){try{const{error:t}=await n.from("attendance").delete().eq("id",e);if(t)throw t;return null}catch(t){return console.log(t),i.showErrorNotification("Failed to delete attendance, please try again"),t}},async approveRequest(e,t,a,r){try{for(const l of r)await this.checkAttendance(a,l.date);const{data:o,error:s}=await n.from("leave_request").update({is_approved:!0,admin_id:t}).eq("id",e);if(s)throw s;this.getRequestList(),i.showSuccessNotification("Request Approved");for(const l of r)await this.insertAttendance(a,l.date)}catch(o){console.log(o),i.showErrorNotification("Failed to approve request, please try again")}},async declineRequest(e,t){try{const{data:a,error:r}=await n.from("leave_request").update({is_approved:!1,admin_id:t}).eq("id",e);if(r)throw r;this.getRequestList(),i.showSuccessNotification("Request Declined")}catch(a){console.log(a),i.showErrorNotification("Failed to decline request, please try again")}}}});export{f as u};
