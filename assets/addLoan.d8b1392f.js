import{at as g,au as r,r as V,o as _,c as m,d as n,Q as h,w as d,aA as S,e as o,a as i,f as y,a8 as N,g as O,S as D,aa as Q,u as U}from"./index.c0f9d41d.js";import{Q as E}from"./QCardSection.bf660eba.js";import{g as f,Q as w}from"./position-engine.24d5c4ea.js";import{Q as v}from"./QSelect.06471d4e.js";import{Q as p}from"./QInput.5bafdbfb.js";import{Q as j,C}from"./ClosePopup.7d22d6d7.js";import{Q as B}from"./QForm.fe34396f.js";import{Q as F}from"./QCard.01e69adc.js";import{Q as k}from"./QDialog.7c9c19ff.js";import{u as q}from"./globalNotification.774fdc7b.js";const u=q(),x=g("viewLoan",{state:()=>({rows:[],is_paying:!1,employeeOption:null,employeeOptions:null,type:null,subject:null,description:null,amount:null,balance:null,payment:null,expectedNewBalance:null,request_id:null,request_is_archive:null,vale:null,partial_to_ar:null,is_archive:null}),getters:{getArchivedLoanList(t){return t.rows.filter(e=>e.is_archive===!0)},getUnarchivedLoanList(t){return t.rows.filter(e=>e.is_archive===!1)},expectedNewBalance(t){return t.balance===null||t.payment===null?null:t.payment>t.balance?"Negative":t.balance-t.payment}},actions:{async getLoanList(){const{data:t,error:e}=await r.from("request").select(`
          id,
        partial_to_ar!partial_to_ar_request_id_fkey(id, amount, balance, is_archive),
        vale!vale_request_id_fkey(id, amount, balance, is_archive),
        request_employee_id (id, company_employee_id, first_name, last_name),
        request_type_id (id, request_type_name),
        request_subject,
        request_description,
        request_application_date,
        admin_employee_id (id, company_employee_id, first_name, last_name),
        admin_comments,
        admin_confirmation_date,
        change_date,
        is_archive
      `).in("request_type_id.id",["1","2"]);if(e)throw e;this.fetchEmployeeOptions(),this.rows=t},async fetchEmployeeOptions(){try{const{data:t,error:e}=await r.from("employee").select("id, company_employee_id, first_name, middle_name, last_name");if(e)throw e;this.employeeOptions=t}catch(t){console.log(t)}},async getSelectedLoan(t){const{data:e,error:c}=await r.from("request").select(`
          id,
        partial_to_ar!partial_to_ar_request_id_fkey(id, amount, balance),
        vale!vale_request_id_fkey(id, amount, balance),
        request_employee_id (id, company_employee_id, first_name, last_name),
        request_type_id (id, request_type_name),
        request_subject,
        request_description,
        request_application_date,
        admin_employee_id (id, company_employee_id, first_name, last_name),
        admin_approval_status,
        admin_comments,
        admin_confirmation_date,
        change_date,
        is_archive
      `).eq("id",t);if(c)throw c;return e[0]},async insertPayment(){if(this.type.id==1)try{const{error:t}=await r.from("vale").update({balance:this.vale[0].balance-this.payment}).select().eq("id",this.vale[0].id);if(t)throw t;this.is_paying=!1,this.getLoanList(),this.resetForm(),u.showSuccessNotification("Payment successfully deducted.")}catch(t){u.showErrorNotification(t.message)}else if(this.type.id==2)try{const{error:t}=await r.from("partial_to_ar").update({balance:this.partial_to_ar[0].balance-this.payment}).select().eq("id",this.partial_to_ar[0].id);if(t)throw t;this.is_paying=!1,this.getLoanList(),this.resetForm(),u.showSuccessNotification("Payment successfully deducted.")}catch(t){u.showErrorNotification(t.message)}},async archiveLoan(){try{const{error:t}=await r.from("request").update({is_archive:!this.request_is_archive}).eq("id",this.request_id);if(t)throw t;if(this.type.id==1)try{const{error:e}=await r.from("vale").update({is_archive:!this.vale[0].id.is_archive}).eq("id",this.vale[0].id);if(e)throw e;this.getLoanList(),u.showSuccessNotification("Vale Loan successfully archived.")}catch(e){console.log(e)}else if(this.type.id==2)try{const{error:e}=await r.from("partial_to_ar").update({is_archive:!this.partial_to_ar[0].is_archive}).eq("id",this.partial_to_ar[0].id);if(e)throw e;this.getLoanList(),u.showSuccessNotification("Partial to A/R Loan successfully archived.")}catch(e){console.log(e)}}catch(t){console.log(t)}},resetForm(){this.employeeOption=null,this.type=null,this.subject=null,this.description=null,this.amount=null,this.balance=null,this.payment=null,this.vale=null,this.partial_to_ar=null,this.is_archive=null}}});const A={class:"tw-m-4 tw-p-6"},P=i("div",{class:"tw-text-3xl tw-font-extrabold tw-pb-3"}," View Loan Form ",-1),I={class:"tw-flex tw-mb-3"},R=i("div",{class:"tw-content-center tw-mr-3"},"Employee Name:",-1),z={class:"tw-my-auto"},T={class:"tw-flex tw-mb-3"},$=i("div",{class:"tw-content-center tw-mr-3"},"Type:",-1),G={class:"tw-flex tw-mb-3"},M=i("div",{class:"tw-content-center tw-mr-3"},"Subject:",-1),W={class:"tw-px-2"},Y=i("div",null,"Description:",-1),H={class:"tw-pb-3 tw-px-2"},J={class:"tw-flex tw-mb-3"},K=i("div",{class:"tw-content-center tw-mr-3"},"Total Amount:",-1),X={class:"tw-px-2"},Z={class:"tw-flex tw-mb-3"},ee=i("div",{class:"tw-content-center tw-mr-3"},"Balance:",-1),te={class:"tw-px-2"},ae={class:"tw-flex tw-mb-3"},ie=i("div",{class:"tw-content-center tw-mr-3"},"Payment:",-1),se={class:"tw-px-2"},oe={key:0,class:"tw-flex tw-mb-3"},le=i("div",{class:"tw-content-center tw-mr-3 tw-text-gray-500"}," Expected New Balance: ",-1),ne={class:"tw-px-2"},re={class:"tw-max-w-full bg-teal tw-text-white tw-rounded tw-p-2"},ge={__name:"ViewLoanButtonV2",props:["rows"],setup(t){const e=x(),c=V(!1);function L(a){e.employeeOption=a&&a.request_employee_id||null,e.type=a&&a.request_type_id||null,e.subject=a&&a.request_subject||null,e.description=a&&a.request_description||null,e.amount=a&&a.vale&&a.vale[0]&&Object.keys(a.vale[0]).length>0?a.vale[0].amount:a.partial_to_ar[0].amount||null,e.balance=a&&a.vale&&a.vale[0]&&Object.keys(a.vale[0]).length>0?a.vale[0].balance:a.partial_to_ar[0].balance||null,e.vale=a&&a.vale&&a.vale[0]?a.vale:null,e.partial_to_ar=a&&a.partial_to_ar&&a.partial_to_ar[0]?a.partial_to_ar:null,e.request_id=a&&a.id||null,e.request_is_archive=a&&a.is_archive!==void 0?a.is_archive:null,e.is_paying=!1}return(a,l)=>(_(),m(Q,null,[n(h,{style:{"flex-wrap":"nowrap !important"},icon:"visibility",label:"VIEW",onClick:l[0]||(l[0]=s=>{L(t.rows),c.value=!0})}),n(k,{modelValue:c.value,"onUpdate:modelValue":l[10]||(l[10]=s=>c.value=s),persistent:""},{default:d(()=>[n(F,{class:"min-width: 500px"},{default:d(()=>[n(B,{onSubmit:l[9]||(l[9]=S(s=>o(e).insertPayment(),["prevent"])),autofocus:""},{default:d(()=>[i("div",A,[n(E,{class:"tw-pt-0 tw-pl-0"},{default:d(()=>[P]),_:1}),i("div",I,[R,i("div",z,[i("div",null,[n(v,{rounded:"",standout:"bg-teal text-white",modelValue:o(e).employeeOption,"onUpdate:modelValue":l[1]||(l[1]=s=>o(e).employeeOption=s),disable:"","use-input":"","hide-selected":"","fill-input":"","hide-bottom-space":"","input-debounce":"0",options:o(e).employeeOptions,"option-label":s=>"first_name"in s?s.company_employee_id+" - "+s.last_name+" "+s.first_name:"",onFilter:a.filterFn,required:"","option-value":a.id,class:"!tw-pb-0; tw-capitalize","popup-content-class":"tw-capitalize"},{"no-option":d(()=>[n(f,null,{default:d(()=>[n(w,{class:"text-grey"},{default:d(()=>[y(" No results ")]),_:1})]),_:1})]),_:1},8,["modelValue","options","option-label","onFilter","option-value"])])])]),i("div",T,[$,n(v,{rounded:"",standout:"bg-teal text-white",modelValue:o(e).type,"onUpdate:modelValue":l[2]||(l[2]=s=>o(e).type=s),disable:"",required:"","use-input":"","hide-selected":"","fill-input":"","hide-bottom-space":"","input-debounce":"0",options:o(e).typeOptions,"option-label":"request_type_name",class:"!tw-pb-0; tw-capitalize;","popup-content-class":"tw-capitalize","emit-value":""},{"no-option":d(()=>[n(f,null,{default:d(()=>[n(w,{class:"text-grey"},{default:d(()=>[y(" No results ")]),_:1})]),_:1})]),_:1},8,["modelValue","options"])]),i("div",G,[M,i("div",W,[n(p,{rounded:"",standout:"bg-teal text-white",modelValue:o(e).subject,"onUpdate:modelValue":l[3]||(l[3]=s=>o(e).subject=s),disable:"",required:"",autogrow:"","hide-bottom-space":"",class:"tw-max-w-full"},null,8,["modelValue"])])]),i("div",null,[Y,i("div",H,[n(p,{rounded:"",standout:"bg-teal text-white",modelValue:o(e).description,"onUpdate:modelValue":l[4]||(l[4]=s=>o(e).description=s),disable:"",required:"",type:"textarea","hide-bottom-space":""},null,8,["modelValue"])])]),i("div",J,[K,i("div",X,[n(p,{rounded:"",standout:"bg-teal text-white",type:"number",modelValue:o(e).amount,"onUpdate:modelValue":l[5]||(l[5]=s=>o(e).amount=s),disable:"",required:"",class:"tw-max-w-full"},null,8,["modelValue"])])]),i("div",Z,[ee,i("div",te,[n(p,{rounded:"",standout:"bg-teal text-white",type:"number",modelValue:o(e).balance,"onUpdate:modelValue":l[6]||(l[6]=s=>o(e).balance=s),disable:"",required:"",class:"tw-max-w-full"},null,8,["modelValue"])])]),i("div",ae,[ie,i("div",se,[n(p,{rounded:"",standout:"bg-teal text-white",type:"number",modelValue:o(e).payment,"onUpdate:modelValue":l[7]||(l[7]=s=>o(e).payment=s),readonly:!o(e).is_paying,rules:[s=>s<=o(e).balance||"Payment cannot be greater than balance"],required:"",class:"tw-max-w-full"},null,8,["modelValue","readonly","rules"])])]),o(e).expectedNewBalance?(_(),m("div",oe,[le,i("div",ne,[i("p",re,N(o(e).expectedNewBalance),1)])])):O("",!0)]),n(j,{align:"right",class:"text-primary noPrint"},{default:d(()=>[D(n(h,{flat:"",label:"CLOSE",onClick:l[8]||(l[8]=s=>{o(e).is_paying=!1,o(e).resetForm()})},null,512),[[C]])]),_:1})]),_:1})]),_:1})]),_:1},8,["modelValue"])],64))}},b=q(),de=U(),ce=x(),qe=g("addLoan",{state:()=>({admin_employee_id:de.getEmployeeId,employeeOption:null,employeeOptions:null,type:null,typeOptions:null,subject:null,description:null,amount:null,insertRequestID:null,disableButtonExisting:!1,addLoanDialog:!1}),getters:{},actions:{async fetchEmployeeOptions(){try{const{data:t,error:e}=await r.from("employee").select("id, company_employee_id, first_name, middle_name, last_name");if(e)throw e;this.employeeOptions=t}catch(t){console.log(t)}},async fetchRequestTypeOptions(){try{const{data:t,error:e}=await r.from("request_type").select("id, request_type_name");if(e)throw e;this.typeOptions=t}catch(t){console.log(t)}},async insertRequestForm(){try{const{data:t,error:e}=await r.from("request").insert({request_employee_id:this.employeeOption.id,request_type_id:this.type.id,request_subject:this.subject,request_description:this.description,request_application_date:new Date().toLocaleDateString("en-US"),admin_employee_id:this.admin_employee_id,request_approval_status_id:2,admin_comments:"Approved",admin_confirmation_date:new Date().toLocaleDateString("en-US"),change_date:new Date().toLocaleDateString("en-US"),is_archive:!1}).select("id");if(e)throw e;this.insertRequestID=t[0].id,this.insertCompanyLoan()}catch(t){console.log(t)}},async insertCompanyLoan(){try{if(this.type.id==1){const{error:t}=await r.from("vale").insert([{request_id:this.insertRequestID,employee_id:this.employeeOption.id,amount:this.amount,balance:this.amount,emp_id_modified_by:this.admin_employee_id,date:new Date().toLocaleDateString("en-US"),is_archive:!1}]);if(t)throw t}else if(this.type.id==2){const{error:t}=await r.from("partial_to_ar").insert([{request_id:this.insertRequestID,employee_id:this.employeeOption.id,amount:this.amount,balance:this.amount,emp_id_modified_by:this.admin_employee_id,date:new Date().toLocaleDateString("en-US"),is_archive:!1}]);if(t)throw t}this.addLoanDialog=!1,ce.getLoanList(),console.log("SUCCESSFULLY ADDED LOAN"),b.showSuccessNotification("Successfully added loan")}catch{b.showErrorNotification("Failed to add loan. Please try again.")}}}});export{ge as _,qe as a,x as u};
