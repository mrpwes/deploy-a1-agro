import{ar as L,as as r,r as O,o as m,c as f,d as n,Q as p,w as d,aN as D,e as i,a as l,f as w,a8 as C,g as k,S as y,n as Q,a7 as v,a5 as U,u as E}from"./index.fa342762.js";import{Q as j}from"./QCardSection.24d886f6.js";import{w as b,t as g,Q as B}from"./position-engine.573b6235.js";import{b as q}from"./QSelect.9e704e12.js";import{Q as _}from"./QInput.d41ba563.js";import{Q as F,C as h}from"./ClosePopup.bcad9a93.js";import{Q as A}from"./QForm.50b80046.js";import{Q as P}from"./QCard.3e67eb2c.js";import{u as V}from"./globalNotification.d7c9769f.js";const u=V(),S=L("viewLoan",{state:()=>({rows:[],is_paying:!1,employeeOption:null,employeeOptions:null,type:null,subject:null,description:null,amount:null,balance:null,payment:null,expectedNewBalance:null,request_id:null,request_is_archive:null,vale:null,partial_to_ar:null,is_archive:null}),getters:{getArchivedLoanList(t){return t.rows.filter(e=>e.is_archive===!0)},getUnarchivedLoanList(t){return t.rows.filter(e=>e.is_archive===!1)},expectedNewBalance(t){return t.balance===null||t.payment===null?null:t.payment>t.balance?"Negative":t.balance-t.payment}},actions:{async getLoanList(){const{data:t,error:e}=await r.from("request").select(`
          id,
        partial_to_ar!partial_to_ar_request_id_fkey(id, amount, balance, is_archive),
        vale!vale_request_id_fkey(id, amount, balance, is_archive),
        request_employee_id (id, company_employee_id, first_name, last_name),
        request_type_id (id, request_type_name),
        request_subject,
        request_description,
        request_application_date,
        admin_employee_id (id, company_employee_id, first_name, last_name),
        admin_comments,
        admin_confirmation_date,
        change_date,
        is_archive
      `).in("request_type_id.id",["1","2"]);if(e)throw e;this.fetchEmployeeOptions(),this.rows=t},async fetchEmployeeOptions(){try{const{data:t,error:e}=await r.from("employee").select("id, company_employee_id, first_name, middle_name, last_name");if(e)throw e;this.employeeOptions=t}catch(t){console.log(t)}},async getSelectedLoan(t){const{data:e,error:c}=await r.from("request").select(`
          id,
        partial_to_ar!partial_to_ar_request_id_fkey(id, amount, balance),
        vale!vale_request_id_fkey(id, amount, balance),
        request_employee_id (id, company_employee_id, first_name, last_name),
        request_type_id (id, request_type_name),
        request_subject,
        request_description,
        request_application_date,
        admin_employee_id (id, company_employee_id, first_name, last_name),
        admin_approval_status,
        admin_comments,
        admin_confirmation_date,
        change_date,
        is_archive
      `).eq("id",t);if(c)throw c;return e[0]},async insertPayment(){if(this.type.id==1)try{const{error:t}=await r.from("vale").update({balance:this.vale[0].balance-this.payment}).select().eq("id",this.vale[0].id);if(t)throw t;this.is_paying=!1,this.getLoanList(),this.resetForm(),u.showSuccessNotification("Payment successfully deducted.")}catch(t){u.showErrorNotification(t.message)}else if(this.type.id==2)try{const{error:t}=await r.from("partial_to_ar").update({balance:this.partial_to_ar[0].balance-this.payment}).select().eq("id",this.partial_to_ar[0].id);if(t)throw t;this.is_paying=!1,this.getLoanList(),this.resetForm(),u.showSuccessNotification("Payment successfully deducted.")}catch(t){u.showErrorNotification(t.message)}},async archiveLoan(){try{const{error:t}=await r.from("request").update({is_archive:!this.request_is_archive}).eq("id",this.request_id);if(t)throw t;if(this.type.id==1)try{const{error:e}=await r.from("vale").update({is_archive:!this.vale[0].id.is_archive}).eq("id",this.vale[0].id);if(e)throw e;this.getLoanList(),u.showSuccessNotification("Vale Loan successfully archived.")}catch(e){console.log(e)}else if(this.type.id==2)try{const{error:e}=await r.from("partial_to_ar").update({is_archive:!this.partial_to_ar[0].is_archive}).eq("id",this.partial_to_ar[0].id);if(e)throw e;this.getLoanList(),u.showSuccessNotification("Partial to A/R Loan successfully archived.")}catch(e){console.log(e)}}catch(t){console.log(t)}},resetForm(){this.employeeOption=null,this.type=null,this.subject=null,this.description=null,this.amount=null,this.balance=null,this.payment=null,this.vale=null,this.partial_to_ar=null,this.is_archive=null}}});const I={class:"tw-m-4 tw-p-6"},R=l("div",{class:"tw-text-3xl tw-font-extrabold tw-pb-3"}," View Loan Form ",-1),z={class:"tw-flex tw-mb-3"},$=l("div",{class:"tw-content-center tw-mr-3"},"Employee Name:",-1),T={class:"tw-my-auto"},G={class:"tw-flex tw-mb-3"},M=l("div",{class:"tw-content-center tw-mr-3"},"Type:",-1),W={class:"tw-flex tw-mb-3"},Y=l("div",{class:"tw-content-center tw-mr-3"},"Subject:",-1),H={class:"tw-px-2"},J=l("div",null,"Description:",-1),K={class:"tw-pb-3 tw-px-2"},X={class:"tw-flex tw-mb-3"},Z=l("div",{class:"tw-content-center tw-mr-3"},"Total Amount:",-1),ee={class:"tw-px-2"},te={class:"tw-flex tw-mb-3"},ae=l("div",{class:"tw-content-center tw-mr-3"},"Balance:",-1),ie={class:"tw-px-2"},se={class:"tw-flex tw-mb-3"},le=l("div",{class:"tw-content-center tw-mr-3"},"Payment:",-1),oe={class:"tw-px-2"},ne={key:0,class:"tw-flex tw-mb-3"},re=l("div",{class:"tw-content-center tw-mr-3 tw-text-gray-500"}," Expected New Balance: ",-1),de={class:"tw-px-2"},ce={class:"tw-max-w-full bg-teal tw-text-white tw-rounded tw-p-2"},qe={__name:"ViewLoanButtonV2",props:["rows"],setup(t){const e=S(),c=O(!1);function N(a){e.employeeOption=a&&a.request_employee_id||null,e.type=a&&a.request_type_id||null,e.subject=a&&a.request_subject||null,e.description=a&&a.request_description||null,e.amount=a&&a.vale&&a.vale[0]&&Object.keys(a.vale[0]).length>0?a.vale[0].amount:a.partial_to_ar[0].amount||null,e.balance=a&&a.vale&&a.vale[0]&&Object.keys(a.vale[0]).length>0?a.vale[0].balance:a.partial_to_ar[0].balance||null,e.vale=a&&a.vale&&a.vale[0]?a.vale:null,e.partial_to_ar=a&&a.partial_to_ar&&a.partial_to_ar[0]?a.partial_to_ar:null,e.request_id=a&&a.id||null,e.request_is_archive=a&&a.is_archive!==void 0?a.is_archive:null,e.is_paying=!1}return(a,o)=>(m(),f(U,null,[n(p,{style:{"flex-wrap":"nowrap !important"},icon:"visibility",label:"VIEW",onClick:o[0]||(o[0]=s=>{N(t.rows),c.value=!0})}),n(B,{modelValue:c.value,"onUpdate:modelValue":o[11]||(o[11]=s=>c.value=s),persistent:""},{default:d(()=>[n(P,{class:"min-width: 500px"},{default:d(()=>[n(A,{onSubmit:o[10]||(o[10]=D(s=>i(e).insertPayment(),["prevent"])),autofocus:""},{default:d(()=>[l("div",I,[n(j,{class:"tw-pt-0 tw-pl-0"},{default:d(()=>[R]),_:1}),l("div",z,[$,l("div",T,[l("div",null,[n(q,{rounded:"",standout:"bg-teal text-white",modelValue:i(e).employeeOption,"onUpdate:modelValue":o[1]||(o[1]=s=>i(e).employeeOption=s),disable:"","use-input":"","hide-selected":"","fill-input":"","hide-bottom-space":"","input-debounce":"0",options:i(e).employeeOptions,"option-label":s=>"first_name"in s?s.company_employee_id+" - "+s.last_name+" "+s.first_name:"",onFilter:a.filterFn,required:"","option-value":a.id,class:"!tw-pb-0; tw-capitalize","popup-content-class":"tw-capitalize"},{"no-option":d(()=>[n(b,null,{default:d(()=>[n(g,{class:"text-grey"},{default:d(()=>[w(" No results ")]),_:1})]),_:1})]),_:1},8,["modelValue","options","option-label","onFilter","option-value"])])])]),l("div",G,[M,n(q,{rounded:"",standout:"bg-teal text-white",modelValue:i(e).type,"onUpdate:modelValue":o[2]||(o[2]=s=>i(e).type=s),disable:"",required:"","use-input":"","hide-selected":"","fill-input":"","hide-bottom-space":"","input-debounce":"0",options:i(e).typeOptions,"option-label":"request_type_name",class:"!tw-pb-0; tw-capitalize;","popup-content-class":"tw-capitalize","emit-value":""},{"no-option":d(()=>[n(b,null,{default:d(()=>[n(g,{class:"text-grey"},{default:d(()=>[w(" No results ")]),_:1})]),_:1})]),_:1},8,["modelValue","options"])]),l("div",W,[Y,l("div",H,[n(_,{rounded:"",standout:"bg-teal text-white",modelValue:i(e).subject,"onUpdate:modelValue":o[3]||(o[3]=s=>i(e).subject=s),disable:"",required:"",autogrow:"","hide-bottom-space":"",class:"tw-max-w-full"},null,8,["modelValue"])])]),l("div",null,[J,l("div",K,[n(_,{rounded:"",standout:"bg-teal text-white",modelValue:i(e).description,"onUpdate:modelValue":o[4]||(o[4]=s=>i(e).description=s),disable:"",required:"",type:"textarea","hide-bottom-space":""},null,8,["modelValue"])])]),l("div",X,[Z,l("div",ee,[n(_,{rounded:"",standout:"bg-teal text-white",type:"number",modelValue:i(e).amount,"onUpdate:modelValue":o[5]||(o[5]=s=>i(e).amount=s),disable:"",required:"",class:"tw-max-w-full"},null,8,["modelValue"])])]),l("div",te,[ae,l("div",ie,[n(_,{rounded:"",standout:"bg-teal text-white",type:"number",modelValue:i(e).balance,"onUpdate:modelValue":o[6]||(o[6]=s=>i(e).balance=s),disable:"",required:"",class:"tw-max-w-full"},null,8,["modelValue"])])]),l("div",se,[le,l("div",oe,[n(_,{rounded:"",standout:"bg-teal text-white",type:"number",modelValue:i(e).payment,"onUpdate:modelValue":o[7]||(o[7]=s=>i(e).payment=s),readonly:!i(e).is_paying,rules:[s=>s<=i(e).balance||"Payment cannot be greater than balance"],required:"",class:"tw-max-w-full"},null,8,["modelValue","readonly","rules"])])]),i(e).expectedNewBalance?(m(),f("div",ne,[re,l("div",de,[l("p",ce,C(i(e).expectedNewBalance),1)])])):k("",!0)]),n(F,{align:"right",class:"text-primary noPrint"},{default:d(()=>[y(n(p,{flat:"",class:Q(i(e).request_is_archive?"tw-bg-green-400":"tw-bg-red-400"),icon:"mdi-archive",label:i(e).request_is_archive?"Unarchive":"Archive",onClick:i(e).archiveLoan},null,8,["class","label","onClick"]),[[h]]),i(e).is_paying===!1?(m(),v(p,{key:0,label:"Add Payment",class:"tw-bg-green-400",disable:i(e).is_paying,onClick:o[8]||(o[8]=s=>i(e).is_paying=!0)},null,8,["disable"])):y((m(),v(p,{key:1,label:"Save",class:"tw-bg-green-400",type:"submit"},null,512)),[[h]]),y(n(p,{flat:"",label:"CLOSE",onClick:o[9]||(o[9]=s=>{i(e).is_paying=!1,i(e).resetForm()})},null,512),[[h]])]),_:1})]),_:1})]),_:1})]),_:1},8,["modelValue"])],64))}},x=V(),ue=E(),pe=S(),xe=L("addLoan",{state:()=>({admin_employee_id:ue.getEmployeeId,employeeOption:null,employeeOptions:null,type:null,typeOptions:null,subject:null,description:null,amount:null,insertRequestID:null,disableButtonExisting:!1,addLoanDialog:!1}),getters:{},actions:{async fetchEmployeeOptions(){try{const{data:t,error:e}=await r.from("employee").select("id, company_employee_id, first_name, middle_name, last_name");if(e)throw e;this.employeeOptions=t}catch(t){console.log(t)}},async fetchRequestTypeOptions(){try{const{data:t,error:e}=await r.from("request_type").select("id, request_type_name").in("id",["1","2"]);if(e)throw e;this.typeOptions=t}catch(t){console.log(t)}},async insertRequestForm(){try{const{data:t,error:e}=await r.from("request").insert({request_employee_id:this.employeeOption.id,request_type_id:this.type.id,request_subject:this.subject,request_description:this.description,request_application_date:new Date().toLocaleDateString("en-US"),admin_employee_id:this.admin_employee_id,request_approval_status_id:2,admin_comments:"Approved",admin_confirmation_date:new Date().toLocaleDateString("en-US"),change_date:new Date().toLocaleDateString("en-US"),is_archive:!1}).select("id");if(e)throw e;this.insertRequestID=t[0].id,this.insertCompanyLoan()}catch(t){console.log(t)}},async insertCompanyLoan(){try{if(this.type.id==1){const{error:t}=await r.from("vale").insert([{request_id:this.insertRequestID,employee_id:this.employeeOption.id,amount:this.amount,balance:this.amount,emp_id_modified_by:this.admin_employee_id,date:new Date().toLocaleDateString("en-US"),is_archive:!1}]);if(t)throw t}else if(this.type.id==2){const{error:t}=await r.from("partial_to_ar").insert([{request_id:this.insertRequestID,employee_id:this.employeeOption.id,amount:this.amount,balance:this.amount,emp_id_modified_by:this.admin_employee_id,date:new Date().toLocaleDateString("en-US"),is_archive:!1}]);if(t)throw t}this.addLoanDialog=!1,pe.getLoanList(),console.log("SUCCESSFULLY ADDED LOAN"),x.showSuccessNotification("Successfully added loan")}catch{x.showErrorNotification("Failed to add loan. Please try again.")}}}});export{qe as _,xe as a,S as u};
